version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tennisapp_test
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./TennisApp
      dockerfile: TennisApp.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Test
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=tennisapp_test;Username=postgres;Password=postgres"
      JWT__SecretKey: "ThisIsAVerySecureSecretKeyForTestingPurposesOnly12345678"
      JWT__Issuer: "TennisApp"
      JWT__Audience: "TennisAppUsers"
      JWT__ExpirationMinutes: "60"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  frontend:
    build:
      context: ./tennis-app-client
      dockerfile: Dockerfile
      target: development
    environment:
      NODE_ENV: test
    ports:
      - "4200:4200"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s